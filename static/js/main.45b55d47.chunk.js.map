{"version":3,"sources":["components/Layout/index.js","utils/index.js","components/Header/index.js","components/NewTask/index.js","store/slice/TodosSlice/index.js","components/ListItem/index.js","components/Todo/index.js","App.js","store/index.js","index.js"],"names":["Layout","children","className","getDay","today","Date","getHours","Header","todos","useSelector","state","length","NewTask","onSubmit","useState","value","setValue","onHandleSubmit","e","preventDefault","trim","type","placeholder","onChange","target","todosSlice","createSlice","name","initialState","reducers","addTask","payload","id","Math","floor","random","task","complete","completeTask","idx","findIndex","el","deleteTask","oldState","filter","actions","ListItem","onComplete","onDelete","onEdit","isHover","setIsHover","onMouseEnter","onMouseLeave","onClick","size","Todo","dispatch","useDispatch","data","alert","map","todo","i","App","rootReducer","todosReducer","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45b55d47.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Layout = ({ children }) => {\r\n    return (\r\n        <div className='bg-gray-700'>\r\n            <div className='mx-auto   h-screen md:w-8/12 lg:w-6/12 py-4 md:py-16'>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Layout;\r\n","export const getDay = () => {\r\n    const today = new Date().getHours();\r\n    if (today >= 0 && today <= 12) {\r\n        return 'Morning';\r\n    }\r\n    if (today >= 12 && today <= 18) {\r\n        return 'Afternoon';\r\n    }\r\n    return 'Evening';\r\n    // return today;\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getDay } from '../../utils';\r\nconst Header = () => {\r\n    const todos = useSelector(state => state.todos).length;\r\n\r\n    return (\r\n        <div className='bg-gray-200 p-4 rounded-t-2xl '>\r\n            <h1>Good {getDay()}</h1>\r\n            <h1 className='text-4xl font-bold mb-4'>Todo App</h1>\r\n            <span className='bg-blue-50 p-2 rounded-lg border-blue-400 border'>\r\n                Total Task: {todos}\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { FaPlus } from 'react-icons/fa';\r\n\r\nconst NewTask = ({ onSubmit }) => {\r\n    const [value, setValue] = useState('');\r\n\r\n    const onHandleSubmit = e => {\r\n        e.preventDefault();\r\n        if (value.trim() === '') {\r\n            return;\r\n        } else {\r\n            onSubmit(value);\r\n            setValue('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form\r\n                className='flex  px-4 py-4 gap-2 bg-gray-200 border-t border-gray-800 rounded-b-2xl'\r\n                onSubmit={e => onHandleSubmit(e)}>\r\n                <input\r\n                    type='text'\r\n                    className='flex-1 focus:outline-none h-full px-6 rounded-full'\r\n                    value={value}\r\n                    placeholder='Add new task...'\r\n                    onChange={e => setValue(e.target.value)}\r\n                />\r\n                <button\r\n                    type='submit'\r\n                    className='w-14 h-14 bg-indigo-600 flex items-center justify-center rounded-full text-white focus:outline-none '>\r\n                    <FaPlus />\r\n                </button>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NewTask;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = [];\r\n\r\nexport const todosSlice = createSlice({\r\n    name: 'todos',\r\n    initialState,\r\n    reducers: {\r\n        addTask: (state, { payload }) => {\r\n            return [\r\n                {\r\n                    id: Math.floor(Math.random() * 10000) + 1,\r\n                    task: payload,\r\n                    complete: false,\r\n                },\r\n                ...state,\r\n            ];\r\n        },\r\n        completeTask: (state, { payload }) => {\r\n            const idx = state.findIndex(el => el.id === payload.id);\r\n            state[idx].complete = payload.complete;\r\n        },\r\n        deleteTask: (state, { payload }) => {\r\n            let oldState = state.filter(el => el.id !== payload);\r\n            return [...oldState];\r\n        },\r\n    },\r\n});\r\n\r\nexport const { addTask, completeTask, deleteTask } = todosSlice.actions;\r\n\r\nexport default todosSlice.reducer;\r\n","import React, { useState } from 'react';\r\nimport { FaCheckCircle, FaRegCircle, FaTrash, FaPlus } from 'react-icons/fa';\r\n\r\nconst ListItem = ({ id, task, complete, onComplete, onEdit, onDelete }) => {\r\n    // const [isHoverOnDelete, setIsHoverOnDelete] = useState(false);\r\n    const [isHover, setIsHover] = useState(false);\r\n\r\n    const onHandleComplete = () => {\r\n        onComplete({ id: id, complete: !complete });\r\n    };\r\n\r\n    const onHandleDelete = () => {\r\n        onDelete(id);\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className={`flex gap-4 px-4  border-b-2 h-16 border-gray-700 items-center  ${\r\n                isHover && 'bg-gray-200 rounded-lg'\r\n            }`}\r\n            onMouseEnter={() => setIsHover(true)}\r\n            onMouseLeave={() => setIsHover(false)}>\r\n            <button\r\n                className='h-full focus:outline-none'\r\n                onClick={onHandleComplete}>\r\n                {complete ? (\r\n                    <FaCheckCircle size='24px' />\r\n                ) : (\r\n                    <FaRegCircle size='24px' />\r\n                )}\r\n            </button>\r\n            <button\r\n                className={`flex-1 text-left h-full focus:outline-none  ${\r\n                    complete && 'line-through'\r\n                }`}>\r\n                {task}\r\n            </button>\r\n            <button\r\n                onClick={onHandleDelete}\r\n                className={` text-left h-full focus:outline-none   ${\r\n                    !isHover && ''\r\n                }`}>\r\n                <FaPlus size='24px' className='transform rotate-45' />\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ListItem;\r\n","import React from 'react';\r\nimport Header from '../Header';\r\nimport NewTask from '../NewTask';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    addTask,\r\n    completeTask,\r\n    deleteTask,\r\n} from '../../store/slice/TodosSlice';\r\nimport ListItem from '../ListItem';\r\n\r\nconst Todo = () => {\r\n    const dispatch = useDispatch();\r\n    const todos = useSelector(state => state.todos);\r\n\r\n    const onSubmit = data => {\r\n        dispatch(addTask(data));\r\n    };\r\n\r\n    const onComplete = data => {\r\n        dispatch(completeTask(data));\r\n    };\r\n\r\n    const onEdit = data => {\r\n        alert(data);\r\n    };\r\n    const onDelete = data => {\r\n        dispatch(deleteTask(data));\r\n    };\r\n\r\n    return (\r\n        <div className=' h-full flex flex-col justify-between '>\r\n            <Header />\r\n            <div className='flex-1  bg-gray-50 flex-col overflow-y-auto px-2 pt-4 md:px-4 '>\r\n                {todos.length === 0 && (\r\n                    <p className=' text-center my-auto text-gray-400'>\r\n                        Start by adding new task\r\n                    </p>\r\n                )}\r\n                {todos.map((todo, i) => (\r\n                    <ListItem\r\n                        key={todo.id}\r\n                        id={todo.id}\r\n                        task={todo.task}\r\n                        complete={todo.complete}\r\n                        onComplete={onComplete}\r\n                        onEdit={onEdit}\r\n                        onDelete={onDelete}\r\n                    />\r\n                ))}\r\n            </div>\r\n            <NewTask onSubmit={onSubmit} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Todo;\r\n","import React from 'react';\r\nimport Layout from './components/Layout';\r\nimport Todo from './components/Todo';\r\n\r\nconst App = () => {\r\n    return (\r\n        <Layout>\r\n            <Todo />\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport todosReducer from './slice/TodosSlice';\r\n\r\nconst rootReducer = {\r\n    todos: todosReducer,\r\n};\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}